{"name":"NURBSlib_EVM","tagline":"python scripts and macros to make NURBS surfaces in FreeCAD -","body":"## NURBSlib_EVM\r\nMy python scripts for creating surfaces in [FreeCAD](http://freecadweb.org/).   \r\n\r\n![A semi decent G2 seam between two surfaces](https://github.com/edwardvmills/NURBSlib_EVM/blob/master/site_stuff/current_state/G2%20join%2066%20surfaces%2005.png?raw=true)\r\n\r\nAt this time, none of the entities created by these scripts are parametric. \r\nThis is the rough workflow prototyping phase. \r\nIf/when the surface creation methods reach my minimum goals, i intend to make them parametric.\r\n\r\nAll scripts in this repository are offered under the terms of the \r\n[GPLv3](http://www.gnu.org/licenses/gpl-3.0.en.html)   \r\nAll models in this repository are offered under the terms of \r\n[CC-BY](http://creativecommons.org/licenses/by/2.0/)   \r\n\r\nFor the time being, this page is intended to give a quick explanation of each tool along with pictures. \r\nYou can read more about the project [here](README.md)\r\n###Setup\r\n-from the top level of the repository, take NURBSlib_EVM.py, all *.fcmacro files, and the icons folder   \r\n-put them somewhere FreeCAD can find them   \r\n-link the fcmacro scripts to icons, descriptions(use macro name), tooltips (use macro name), etc.   \r\n-put all those GUI macros in toolbars.   \r\n-add those toolbars to the PartDesign workbench. The raw material will be PartDesign sketches, so this is a good place to put the toolbars for the time being. \r\n\r\nHere is a picture of how i like to group them:\r\n![toolbar setup](https://github.com/edwardvmills/NURBSlib_EVM/blob/master/site_stuff/basic_usage/setting%20up%20the%20toolbars.png?raw=true)\r\n###Usage\r\nDraw sketches of lines/circles (check each curve macro to see what inputs it wants). In the picture below we see:  \r\n-a sketcher arc   \r\n-a sketch of three lines connected end to end   \r\n-three 'node' sketches. A node is one circle + any number of lines that start at the circle center\r\n![sketches as inputs](https://github.com/edwardvmills/NURBSlib_EVM/blob/master/site_stuff/basic_usage/_01%20sketches%20as%20inputs.png?raw=true)\r\n\r\nSelect those lines/circles in the order specified by the macro, then hit the macro button > the curve is created.\r\nIn the picture below:   \r\n-select the arc, then hit   \r\n![Arc_to_rational_bezier icon](https://github.com/edwardvmills/NURBSlib_EVM/blob/master/icons/icon_bitmaps/Arc_to_rational_bezier.png?raw=true)   \r\n-select the three lines from the single sketch in order, then hit   \r\n![Bezier_Cubic_3_lines icon](https://github.com/edwardvmills/NURBSlib_EVM/blob/master/icons/icon_bitmaps/Bezier_Cubic_3_lines.png?raw=true)    \r\n-from one node, select the circle, then the line end point, then another node, select a line endpoint, then the circle. hit   \r\n![Bezier_Cubic_2_nodes icon](https://github.com/edwardvmills/NURBSlib_EVM/blob/master/icons/icon_bitmaps/Bezier_Cubic_2_nodes.png?raw=true)   \r\nWhy the funky selection order? The circles represent curve endpoints, and the lines radiating from them represent the tangents. This is a 3D bezier control, and picking a circle is WAY easier than trying to explain to FreeCAD which point i want when there are many lines connecting at a point. [TODO: adapt the macro so the selection goes: circle>line>cirle>line, and extract the line endpoints, reorder automatically)   \r\n![cruves from sketches](https://github.com/edwardvmills/NURBSlib_EVM/blob/master/site_stuff/basic_usage/_02%20curves%20from%20sketches.png?raw=true)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n-select 3/4 curves in a loop counterclockwise (surface normal will then point towards you), hit the surface macro button > surface is created.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}